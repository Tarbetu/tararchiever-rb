{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2","program":"/home/emre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lz4","--edition=2018","/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=55a28a6e597b0e0f","-C","extra-filename=-55a28a6e597b0e0f","--out-dir","/home/emre/Genel/tararchiever/target/rls/debug/deps","-L","dependency=/home/emre/Genel/tararchiever/target/rls/debug/deps","--extern","libc=/home/emre/Genel/tararchiever/target/rls/debug/deps/liblibc-703ff87986dd3e34.rmeta","--extern","lz4_sys=/home/emre/Genel/tararchiever/target/rls/debug/deps/liblz4_sys-6e95aeda3039873b.rmeta","--cap-lints","allow","-L","native=/home/emre/Genel/tararchiever/target/rls/debug/build/lz4-sys-2e2e5649bf27eedc/out","--error-format=json","--sysroot","/home/emre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/emre/Genel/tararchiever/target/rls/debug/deps/liblz4-55a28a6e597b0e0f.rmeta"},"prelude":{"crate_id":{"name":"lz4","disambiguator":[12440599931573087754,1329408677591299477]},"crate_root":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src","external_crates":[{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[13724102224262606239,8428458070253568838]}},{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","num":19,"id":{"name":"lz4_sys","disambiguator":[14078265942402167623,14396813888200782474]}}],"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":0,"byte_end":347,"line_start":1,"line_end":17,"column_start":1,"column_end":40}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":493,"byte_end":494,"line_start":8,"line_end":8,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"LZ4FDecompressionContext, LZ4F_createDecompressionContext, LZ4F_freeDecompressionContext, LZ4FCompressionContext, LZ4F_flush, LZ4F_compressEnd, LZ4_compress_HC, LZ4_compress_default, BlockSize, LZ4FPreferences, LZ4F_freeCompressionContext, LZ4F_decompress, LZ4F_isError, LZ4_compress_fast, LZ4F_compressBound, LZ4_decompress_safe, LZ4FFrameInfo, BlockMode, LZ4F_VERSION, LZ4_versionNumber, LZ4F_compressUpdate, LZ4F_getErrorName, LZ4FErrorCode, LZ4F_createCompressionContext, LZ4F_compressBegin, LZ4_compressBound, ContentChecksum","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":126,"byte_end":133,"line_start":11,"line_end":11,"column_start":25,"column_end":32},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":159,"byte_end":166,"line_start":12,"line_end":12,"column_start":25,"column_end":32},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":192,"byte_end":206,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"EncoderBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":231,"byte_end":238,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"alias_span":null,"name":"version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":99},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":263,"byte_end":272,"line_start":15,"line_end":15,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":81},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":297,"byte_end":306,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":107},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":331,"byte_end":346,"line_start":17,"line_end":17,"column_start":24,"column_end":39},"alias_span":null,"name":"ContentChecksum","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":0,"byte_end":347,"line_start":1,"line_end":17,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":20},{"krate":0,"index":52},{"krate":0,"index":92},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"liblz4","qualname":"::liblz4","value":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":525,"byte_end":533,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"LZ4Error","qualname":"::liblz4::LZ4Error","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":885,"byte_end":896,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"check_error","qualname":"::liblz4::check_error","value":"pub fn check_error(LZ4FErrorCode) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":1372,"byte_end":1379,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"version","qualname":"::liblz4::version","value":"pub fn version() -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1694,"byte_end":1701,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2018,"byte_end":2021,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Result<Decoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will have its output written to the given\n output stream. The output stream can be re-acquired by calling\n `finish()`\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will have its output written to the given","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1843,"byte_end":1916,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ output stream. The output stream can be re-acquired by calling","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1921,"byte_end":1987,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/ `finish()`","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1992,"byte_end":2006,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2371,"byte_end":2377,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"reader","qualname":"<Decoder<R>>::reader","value":"pub fn reader(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Immutable reader reference.\n","sig":null,"attributes":[{"value":"/ Immutable reader reference.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2328,"byte_end":2359,"line_start":37,"line_end":37,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2427,"byte_end":2433,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"finish","qualname":"<Decoder<R>>::finish","value":"pub fn finish(Self) -> (R, Result<()>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":10849,"byte_end":10863,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"EncoderBuilder","qualname":"::encoder::EncoderBuilder","value":"EncoderBuilder {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11145,"byte_end":11152,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11266,"byte_end":11269,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11531,"byte_end":11541,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"block_size","qualname":"<EncoderBuilder>::block_size","value":"pub fn block_size(&mut Self, BlockSize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11660,"byte_end":11670,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"block_mode","qualname":"<EncoderBuilder>::block_mode","value":"pub fn block_mode(&mut Self, BlockMode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11789,"byte_end":11797,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"checksum","qualname":"<EncoderBuilder>::checksum","value":"pub fn checksum(&mut Self, ContentChecksum) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11916,"byte_end":11921,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"level","qualname":"<EncoderBuilder>::level","value":"pub fn level(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":12019,"byte_end":12029,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"auto_flush","qualname":"<EncoderBuilder>::auto_flush","value":"pub fn auto_flush(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":12143,"byte_end":12148,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"build","qualname":"<EncoderBuilder>::build","value":"pub fn build<W: Write>(&Self, W) -> Result<Encoder<W>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":13907,"byte_end":13913,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"writer","qualname":"<Encoder<W>>::writer","value":"pub fn writer(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Immutable writer reference.\n","sig":null,"attributes":[{"value":"/ Immutable writer reference.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":13864,"byte_end":13895,"line_start":119,"line_end":119,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":14158,"byte_end":14164,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder<W>>::finish","value":"pub fn finish(Self) -> (W, Result<()>)","parent":null,"children":[],"decl_id":null,"docs":" This function is used to flag that this session of compression is done\n with. The stream is finished up (final bytes are written), and then the\n wrapped writer is returned.\n","sig":null,"attributes":[{"value":"/ This function is used to flag that this session of compression is done","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":13956,"byte_end":14030,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ with. The stream is finished up (final bytes are written), and then the","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":14035,"byte_end":14110,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ wrapped writer is returned.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":14115,"byte_end":14146,"line_start":126,"line_end":126,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"block","qualname":"::block","value":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":" This module provides access to the block mode functions of the lz4 C library.\n It somehow resembles the [Python-lz4](http://python-lz4.readthedocs.io/en/stable/lz4.block.html) api,\n but using Rust's Option type, the function parameters have been a little simplified.\n As does python-lz4, this module supports prepending the compressed buffer with a u32 value\n representing the size of the original, uncompressed data.","sig":null,"attributes":[{"value":"/ This module provides access to the block mode functions of the lz4 C library.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":16970,"byte_end":17051,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ It somehow resembles the [Python-lz4](http://python-lz4.readthedocs.io/en/stable/lz4.block.html) api,","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17052,"byte_end":17157,"line_start":2,"line_end":2,"column_start":1,"column_end":106}},{"value":"/ but using Rust's Option type, the function parameters have been a little simplified.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17158,"byte_end":17246,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ As does python-lz4, this module supports prepending the compressed buffer with a u32 value","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17247,"byte_end":17341,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ representing the size of the original, uncompressed data.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17342,"byte_end":17403,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17404,"byte_end":17407,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17408,"byte_end":17422,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17423,"byte_end":17430,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17431,"byte_end":17434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ use lz4::block::{compress,decompress};","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17435,"byte_end":17477,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17478,"byte_end":17481,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let v = vec![0u8; 1024];","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17482,"byte_end":17510,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17511,"byte_end":17514,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let comp_with_prefix = compress(&v, None, true).unwrap();","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17515,"byte_end":17576,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ let comp_wo_prefix = compress(&v, None, false).unwrap();","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17577,"byte_end":17637,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17638,"byte_end":17641,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, decompress(&comp_with_prefix, None).unwrap());","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17642,"byte_end":17706,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(v, decompress(&comp_wo_prefix, Some(1024)).unwrap());","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17707,"byte_end":17775,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17776,"byte_end":17783,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":100},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17998,"byte_end":18013,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"HIGHCOMPRESSION","qualname":"::block::CompressionMode::HIGHCOMPRESSION","value":"CompressionMode::HIGHCOMPRESSION(i32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" High compression with compression parameter\n","sig":null,"attributes":[{"value":"/ High compression with compression parameter","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17946,"byte_end":17993,"line_start":27,"line_end":27,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":103},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18075,"byte_end":18079,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"FAST","qualname":"::block::CompressionMode::FAST","value":"CompressionMode::FAST(i32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Fast compression with acceleration paramet\n","sig":null,"attributes":[{"value":"/ Fast compression with acceleration paramet","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18024,"byte_end":18070,"line_start":29,"line_end":29,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":106},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18118,"byte_end":18125,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"DEFAULT","qualname":"::block::CompressionMode::DEFAULT","value":"CompressionMode::DEFAULT","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Default compression\n","sig":null,"attributes":[{"value":"/ Default compression","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18090,"byte_end":18113,"line_start":31,"line_end":31,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":99},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17924,"byte_end":17939,"line_start":26,"line_end":26,"column_start":10,"column_end":25},"name":"CompressionMode","qualname":"::block::CompressionMode","value":"pub enum CompressionMode {\n\n    /// High compression with compression parameter\n    HIGHCOMPRESSION(i32),\n\n    /// Fast compression with acceleration paramet\n    FAST(i32),\n\n    /// Default compression\n    DEFAULT,\n}","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106}],"decl_id":null,"docs":" Represents the compression mode do be used.\n","sig":null,"attributes":[{"value":"/ Represents the compression mode do be used.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":17867,"byte_end":17914,"line_start":25,"line_end":25,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18647,"byte_end":18655,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"compress","qualname":"::block::compress","value":"pub fn compress(&[u8], Option<CompressionMode>, bool) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the full src buffer using the specified CompressionMode, where None and Some(Default)\n are treated equally. If prepend_size is set, the source length will be prepended to the output\n buffer.","sig":null,"attributes":[{"value":"/ Compresses the full src buffer using the specified CompressionMode, where None and Some(Default)","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18130,"byte_end":18230,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ are treated equally. If prepend_size is set, the source length will be prepended to the output","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18231,"byte_end":18329,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ buffer.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18330,"byte_end":18341,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18342,"byte_end":18345,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18346,"byte_end":18349,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18350,"byte_end":18362,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidInput if the src buffer is too long.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18363,"byte_end":18449,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ Returns std::io::Error with ErrorKind::Other if the compression failed inside the C library. If","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18450,"byte_end":18549,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/ this happens, the C api was not able to provide more information about the cause.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18550,"byte_end":18635,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":18636,"byte_end":18639,"line_start":44,"line_end":44,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":21305,"byte_end":21315,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decompress","qualname":"::block::decompress","value":"pub fn decompress(&[u8], Option<i32>) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the src buffer. If uncompressed_size is None, the source length will be read from\n the start of the input buffer.","sig":null,"attributes":[{"value":"/ Decompresses the src buffer. If uncompressed_size is None, the source length will be read from","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20826,"byte_end":20924,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/ the start of the input buffer.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20925,"byte_end":20959,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20960,"byte_end":20963,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20964,"byte_end":20967,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20968,"byte_end":20980,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidInput if the src buffer is too short, the","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":20981,"byte_end":21072,"line_start":120,"line_end":120,"column_start":1,"column_end":92}},{"value":"/ provided (or parsed) uncompressed_size is to large or negative.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":21073,"byte_end":21140,"line_start":121,"line_end":121,"column_start":1,"column_end":68}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidData if the decompression failed inside the C","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":21141,"byte_end":21236,"line_start":122,"line_end":122,"column_start":1,"column_end":96}},{"value":"/ library. This is most likely due to malformed input.","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":21237,"byte_end":21293,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/block/mod.rs","byte_start":21294,"byte_end":21297,"line_start":124,"line_end":124,"column_start":1,"column_end":4}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":561,"byte_end":569,"line_start":13,"line_end":13,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":726,"byte_end":734,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1826,"byte_end":1833,"line_start":21,"line_end":21,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2782,"byte_end":2789,"line_start":56,"line_end":56,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":4400,"byte_end":4414,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":4686,"byte_end":4700,"line_start":111,"line_end":111,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11238,"byte_end":11252,"line_start":30,"line_end":30,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":13068,"byte_end":13075,"line_start":92,"line_end":92,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":14294,"byte_end":14301,"line_start":133,"line_end":133,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":15555,"byte_end":15569,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":15837,"byte_end":15851,"line_start":183,"line_end":183,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":50,"byte_end":56,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/lib.rs","byte_start":94,"byte_end":99,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":92}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":561,"byte_end":569,"line_start":13,"line_end":13,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/liblz4.rs","byte_start":726,"byte_end":734,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":117},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":1826,"byte_end":1833,"line_start":21,"line_end":21,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":2782,"byte_end":2789,"line_start":56,"line_end":56,"column_start":24,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":32},"to":{"krate":1,"index":3120}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":4400,"byte_end":4414,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/decoder.rs","byte_start":4686,"byte_end":4700,"line_start":111,"line_end":111,"column_start":15,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":11238,"byte_end":11252,"line_start":30,"line_end":30,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":13068,"byte_end":13075,"line_start":92,"line_end":92,"column_start":16,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":61},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":14294,"byte_end":14301,"line_start":133,"line_end":133,"column_start":26,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":61},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":15555,"byte_end":15569,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/emre/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.23.2/src/encoder.rs","byte_start":15837,"byte_end":15851,"line_start":183,"line_end":183,"column_start":15,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":2266}}]}